-- Zepto Exploratory Data Analysis (EDA) Project SQL Queries

-- 1. Data Cleaning: Remove records where MRP (Maximum Retail Price) is 0,
--    as this likely indicates invalid or incomplete product data.
DELETE FROM zepto
WHERE mrp = 0;

-- 2. Data Transformation: Convert 'mrp' and 'discountedsellingprice'
--    from paise to rupees by multiplying by 100.0 (assuming the original unit was paise).
UPDATE zepto
SET mrp = mrp * 100.0,
    discountedsellingprice = discountedsellingprice * 100.0;

-- 3. Top 10 Products by Discount:
--    Retrieves the names of products and their discount percentages,
--    ordered by the highest discount, showing the top 10 unique products.
SELECT DISTINCT
    name,
    discountpercent
FROM
    zepto
ORDER BY
    discountpercent DESC
LIMIT 10;

-- 4. Out-of-Stock Products with High MRP:
--    Identifies unique product names and their MRPs for items that are
--    currently out of stock and have a MRP greater than 250,
--    ordered by MRP in descending order.
SELECT DISTINCT
    name,
    mrp
FROM
    zepto
WHERE
    outofstock = TRUE AND mrp > 250
ORDER BY
    mrp DESC;

-- 5. Revenue by Category:
--    Calculates the total revenue generated by each product category,
--    based on discounted selling price and quantity,
--    ordered by revenue in descending order.
SELECT
    category,
    SUM(discountedsellingprice * quantity) AS revenue
FROM
    zepto
GROUP BY
    category
ORDER BY
    revenue DESC;

-- 6. Top 5 Categories by Average Discount:
--    Calculates the average discount percentage for each category,
--    rounds it to two decimal places, and returns the top 5 categories
--    with the highest average discount.
SELECT
    category,
    ROUND(AVG(discountpercent), 2) AS avg_discount
FROM
    zepto
GROUP BY
    category
ORDER BY
    avg_discount DESC
LIMIT 5;

-- 7. Product Weight Category Classification:
--    Classifies each unique product into 'Low', 'Medium', or 'Heavy'
--    weight categories based on their 'weightingms' value.
SELECT DISTINCT
    name,
    CASE
        WHEN weightingms < 1000 THEN 'Low'
        WHEN weightingms < 5000 THEN 'Medium'
        ELSE 'Heavy'
    END AS weight_category
FROM
    zepto;

-- 8. Inventory Weight by Category:
--    Calculates the total "inventory weight" for each category
--    (availablequantity multiplied by weightingms),
--    ordered by inventory weight in descending order.
SELECT
    category,
    SUM(availablequantity * weightingms) AS inventory_weight
FROM
    zepto
GROUP BY
    category
ORDER BY
    inventory_weight DESC;
